<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3c.org/1999/xhtml"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui"
    xmlns:o="http://omnifaces.org/ui"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    template="/WEB-INF/templates/main.xhtml">

    <ui:define name="content">
        <f:metadata>
            <f:viewAction action="#{gameRoundController.setUser(sessionInfoBean.currentUser)}" />
        </f:metadata>
        <c:set var="grc" value="#{gameRoundController}" scope="session" />

        <p:growl id="msg" showDetail="true" skipDetailIfEqualsSummary="true" sticky="true" value="Multiple"/>

        <h:form>
            <p:panel styleClass="gameroomHeader">
                <h1>Gameroom</h1>
                <h:outputText style="font-size:15px!important" value="---- ---- ---- ---- ---- ---- ----" />
                <h:outputText style="font-size:20px!important"
                    value="#{grc.currentGame.name}   -   #{grc.currentGame.topic.name}   -   Max. points: #{grc.currentGame.maxPoints}"
                    rendered="#{not empty grc.currentGame}" />
                <h:outputText style="font-size:20px!important"
                    value="No game available"
                    rendered="#{empty grc.currentGame}" />
            </p:panel>
        </h:form>

        <h:form id="noGameForm" styleClass="gameroomNogame" rendered="#{grc.currentRunState == 'NONE'}">
            <h:panelGroup rendered="#{grc.currentNoGameReason == 'GAME_FINISHED'}">
                <p:outputPanel>Your game finished by reaching the maximum points set or running out of terms.</p:outputPanel>
                <p:outputPanel>Please leave the gameroom!</p:outputPanel>
            </h:panelGroup>
            <h:panelGroup rendered="#{grc.currentNoGameReason == 'GAME_CANCELED'}">
                <p:outputPanel>Your game was canceled from outside and cannot be restarted.</p:outputPanel>
                <p:outputPanel>Please leave the gameroom!</p:outputPanel>
            </h:panelGroup>
            <h:panelGroup rendered="#{grc.currentNoGameReason == 'GAME_WRONGSTATE'}">
                <p:outputPanel>Your game is in some wrong state and cannot be started right now.</p:outputPanel>
                <p:outputPanel>Please find some privileged user to fix that...</p:outputPanel>
            </h:panelGroup>
            <h:panelGroup rendered="#{grc.currentNoGameReason == 'GAME_UNKNOWN'}">
                <p:outputPanel>There is no game known for you to play right now.</p:outputPanel>
                <p:outputPanel>Please leave the gameroom!</p:outputPanel>
            </h:panelGroup>
            <h:panelGroup rendered="#{grc.currentNoGameReason == 'NONE'}">
                <p:outputPanel>Your game has some incorrect state, but there is no obvious reason... please try to reload the page.</p:outputPanel>
            </h:panelGroup>
        </h:form>

        <h:form id="waitGameForm" styleClass="gameroomNogame" rendered="#{grc.currentRunState == 'WAITING'}">
            <h:panelGroup rendered="#{grc.currentWaitReason == 'TEAMS_ABSENT'}">
                <p:outputPanel>Your game is up and running, but paused because there are not enough players in the gameroom (minimum is one player per team).</p:outputPanel>
                <p:outputPanel>Please inform your friends and wait...</p:outputPanel>
            </h:panelGroup>
            <h:panelGroup rendered="#{grc.currentWaitReason == 'CUBE_OFFLINE'}">
                <p:outputPanel>Your game is up and running, but paused because the connection to the cube was lost.</p:outputPanel>
                <p:outputPanel>Please try to reconnect it and wait...</p:outputPanel>
            </h:panelGroup>
            <h:panelGroup rendered="#{grc.currentWaitReason == 'GAME_HALTED'}">
                <p:outputPanel>Your game was paused from outside.</p:outputPanel>
                <p:outputPanel>Please find somebody to restart it...</p:outputPanel>
            </h:panelGroup>
            <h:panelGroup rendered="#{grc.currentWaitReason == 'NONE'}">
                <p:outputPanel>There is no reason to wait... please try to reload the page.</p:outputPanel>
            </h:panelGroup>
            <p:progressBar id="progressBarIndeterminate" mode="indeterminate" />
        </h:form>

        <h:form id="gameTableForm" rendered="#{not empty grc.currentGame}">
            <p:dataTable id="leaderbord" var="team" value="#{grc.teamsInGame}"
                rowStyleClass="#{grc.isGuessingTeam(team) ? grc.isUserTeam(team) ? 'USERTEAM GUESSTEAM' : 'GUESSTEAM' : grc.isUserTeam(team) ? 'USERTEAM' : null}">
                <p:column headerText="Team">
                    <h:outputText value="#{team.name}" />
                </p:column>
                <p:column headerText="Current Points">
                    <h:outputText value="#{grc.calculatePointsOfTeam(team)}" />
                </p:column>
            </p:dataTable>
        </h:form>

        <h:form id="gameRoundForm" prependId="false" rendered="#{grc.currentRunState == 'RUNNING'}">
            <c:set var="currRound" value="#{grc.currentRound}" scope="request" />
            <p:panel id="roundInfo" header="Round #{grc.currentRound.nr}">
                <p:outputPanel rendered="#{currRound.nr > 1}">
                    <c:choose>
                        <c:when test="#{empty grc.lastRound}">
                            You entered the gameroom a little late, so there is no information about the last round available for you, but you can jump right in.
                        </c:when>
                        <c:otherwise>
                            #{grc.inLastGuessingTeam ? 'You' : grc.lastRound.guessingTeam.name} #{grc.lastRound.correctAnswer ? 'correctly guessed' : 'tried to guess'} the term #{grc.lastRound.termToGuess.name} during the last round.
                        </c:otherwise>
                    </c:choose>
                </p:outputPanel>

                <c:choose>
                    <c:when test="#{grc.inGuessingTeam}">
                        <c:choose>
                            <c:when test="#{grc.currentRoundState == 'STARTING'}">
                                <c:choose>
                                    <c:when test="#{currRound.nr == 1}">
                                        <p:outputPanel>Flip your cube to start the first round... may the best team win!</p:outputPanel>
                                        <p:outputPanel>#{currRound.guessingUser.username} has to describe first.</p:outputPanel>
                                    </c:when>
                                    <c:otherwise>
                                        <p:outputPanel>#{currRound.guessingUser.username} has to describe next... flip the cube and try your best!</p:outputPanel>
                                    </c:otherwise>
                                </c:choose>
                            </c:when>
                            <c:when test="#{grc.currentRoundState == 'RUNNING'}">
                                <p:outputPanel>#{currRound.guessingUser.username} is describing at the moment.</p:outputPanel>
                            </c:when>
                            <c:when test="#{grc.currentRoundState == 'VALIDATING'}">
                                <p:outputPanel>#{currRound.guessingUser.username} has just finished describing.</p:outputPanel>
                                <p:outputLabel>Your teams effort is currently evaluated by the other teams.</p:outputLabel>
                            </c:when>
                        </c:choose>
                    </c:when>
                    <c:otherwise>
                        <c:choose>
                            <c:when test="#{grc.currentRoundState == 'STARTING'}">
                                <p:outputPanel>#{currRound.nr == 1 ? 'First' : 'Next'} #{currRound.guessingUser.username} from #{currRound.guessingTeam.name} has to describe the term #{currRound.termToGuess.name}.</p:outputPanel>
                            </c:when>
                            <c:when test="#{grc.currentRoundState == 'RUNNING'}">
                                <p:outputPanel>Currently #{currRound.guessingUser.username} from #{currRound.guessingTeam.name} is describing the term #{currRound.termToGuess.name}.</p:outputPanel>
                            </c:when>
                            <c:when test="#{grc.currentRoundState == 'VALIDATING'}">
                                <p:outputPanel>#{currRound.guessingUser.username} from #{currRound.guessingTeam.name} has just finished describing the term #{currRound.termToGuess.name}.</p:outputPanel>
                                <p:outputPanel>If you don't see the round validation dialog, click the button in the top right corner.</p:outputPanel>
                            </c:when>
                        </c:choose>
    
                        <p:commandButton type="button" icon="fa fa-superpowers" styleClass="revalidate"
                            onclick="PF('roundValidationDialog').show()"
                            update=":gameRoundForm:roundInfo :roundValidationForm:roundValidationDialog" />
                    </c:otherwise>
                </c:choose>

                <p:outputPanel header="RoundInfo">
                    <h3>Time left to guess</h3>
                    <h1 class="p-text-center">
                        <h:outputText id="countDown" value="#{grc.countDown}" />
                    </h1>
                    <p:panelGrid columns="2" layout="flex" styleClass="ui-panelgrid-blank" style="margin-top:15px"
                        columnClasses="p-col-5, p-col-7" contentStyleClass="ui-fluid">
                        <p:outputLabel value="User: " />
                        <p:outputLabel value="#{currRound.guessingUser.username}" />

                        <p:outputLabel value="Team: " />
                        <p:outputLabel value="#{currRound.guessingTeam.name}" />

                        <p:outputLabel value="Term: "/>
                        <p:outputLabel value="#{grc.inGuessingTeam ? '?' : currRound.termToGuess.name}" />

                        <p:outputLabel value="Points: " />
                        <p:outputLabel value="#{currRound.points}" />

                        <p:outputLabel value="Activity: " />
                        <p:outputLabel value="#{currRound.activity}" />
                    </p:panelGrid>
                </p:outputPanel>
            </p:panel>
        </h:form>

        <h:form id="roundValidationForm">
            <p:dialog id="roundValidationDialog" header="Round Validation" widgetVar="roundValidationDialog" modal="true" dynamic="true"
                responsive="true" resizable="false" closable="false" closeOnEscape="false" showEffect="fade" hideEffect="fade">

                <c:choose>
                    <c:when test="#{grc.currentRoundState == 'VALIDATING'}">
                        <h:panelGroup styleClass="dlgContent">
                            <c:choose>
                                <c:when test="#{grc.inGuessingTeam}">
                                    <p:outputPanel>You gave your best shot, your fate is now in the hands of your rivals.</p:outputPanel>
                                    <p:outputPanel>Please wait until they have evaluated your effort...</p:outputPanel>
                                </c:when>
                                <c:otherwise>
                                    <p:outputPanel>Did #{grc.currentRound.guessingTeam.name} guess #{grc.currentRound.termToGuess.name} correctly?</p:outputPanel>
                                    <p:outputPanel>First click comes first...</p:outputPanel>
                                </c:otherwise>
                            </c:choose>
                        </h:panelGroup>
                        
                        <h:panelGrid columns="3" rendered="#{!grc.inGuessingTeam}">
                            <p:commandButton value="Correct" action="#{grc.correctRound}" update=":gameRoundForm :gameTableForm"/>
                            <p:commandButton value="Incorrect" action="#{grc.incorrectRound}" update=":gameRoundForm :gameTableForm"/>
                            <p:commandButton value="Cheated" action="#{grc.cheatedRound}" update=":gameRoundForm :gameTableForm"/>
                        </h:panelGrid>
                    </c:when>
                    <c:otherwise>
                        <p:outputPanel>Round cannot be validated right now!</p:outputPanel>
                        <h:panelGrid columns="1">
                            <p:commandButton value="OK" onclick="PF('roundValidationDialog').hide()" />
                        </h:panelGrid>
                    </c:otherwise>
                </c:choose>
            </p:dialog>
        </h:form>

        <h:form id="roundTimesUpForm">
            <p:dialog id="roundTimesUpDialog" header="Time is up" widgetVar="roundTimesUpDialog" modal="true" dynamic="true"
                responsive="true" resizable="false" closable="false" closeOnEscape="false" showEffect="fade" hideEffect="fade">

                <h:panelGroup styleClass="dlgContent">
                    <c:choose>
                        <c:when test="#{grc.inGuessingTeam}">
                            <p:outputPanel>That took a bit long!</p:outputPanel>
                            <p:outputPanel>Please wait until your rivals have confirmed this round...</p:outputPanel>
                        </c:when>
                        <c:otherwise>
                            <p:outputPanel>Seems like #{grc.currentRound.guessingTeam.name} did not guess #{grc.currentRound.termToGuess.name} in time.</p:outputPanel>
                            <p:outputPanel>Please confirm this round to continue!</p:outputPanel>
                        </c:otherwise>
                    </c:choose>
                </h:panelGroup>

                <h:panelGrid columns="2" rendered="#{!grc.inGuessingTeam}">
                    <p:commandButton value="Confirm"
                        action="#{grc.endRoundViaCountDown}" update=":gameRoundForm :gameTableForm"
                        oncomplete="PF('roundTimesUpDialog').hide()"/>
                </h:panelGrid>
            </p:dialog>
        </h:form>

        <ui:include src="/WEB-INF/includes/gameRanking.xhtml">
            <ui:param name="dialogName" value="gameOver" />
            <ui:param name="dialogHeader" value="Game Over" />
            <ui:param name="gameOver" value="#{true}" />
        </ui:include>

        <ui:include src="/WEB-INF/includes/gameRanking.xhtml">
            <ui:param name="dialogName" value="termOver" />
            <ui:param name="dialogHeader" value="Term Over" />
            <ui:param name="termOver" value="#{true}" />
        </ui:include>

        <ui:include src="/WEB-INF/includes/gameRanking.xhtml">
            <ui:param name="dialogName" value="gameCanceled" />
            <ui:param name="dialogHeader" value="Game Canceled" />
            <ui:param name="gameCanceled" value="#{true}" />
        </ui:include>

        <o:socket channel="countDownChannel" scope="session"
            user="#{sessionInfoBean.currentUser.id}"
            onmessage="function(m){console.log(m);}">
            <p:ajax event="countDownUpdate" update="countDown" />
        </o:socket>

        <o:socket channel="newRoundChannel" scope="session"
            onmessage="function(m){console.log(m);}"
            user="#{sessionInfoBean.currentUser.id}">

            <p:ajax event="startRound"
                listener="#{grc.startRound}"
                update=":gameRoundForm:roundInfo" />

            <p:ajax event="endRoundViaFlip"
                listener="#{grc.endRound}"
                oncomplete="PF('roundValidationDialog').show()"
                update=":gameRoundForm:roundInfo :roundValidationForm:roundValidationDialog" />

            <p:ajax event="endRoundViaCountDown"
                oncomplete="PF('roundTimesUpDialog').show()"
                update=":roundTimesUpForm:roundTimesUpDialog" />

            <p:ajax event="validatedRound"
                listener="#{grc.validatedRound}"
                oncomplete="PF('roundValidationDialog').hide(); PF('roundTimesUpDialog').hide()"
                update="@all" />

            <p:ajax event="gameOver"
                onevent="PF('roundValidationDialog').hide()"
                oncomplete="PF('gameOverDialog').show()"
                update=":gameRoundForm:roundInfo :gameOverForm:gameOverDialog" />

            <p:ajax event="termsOver"
                onevent="PF('roundValidationDialog').hide(); PF('roundTimesUpDialog').hide()"
                oncomplete="PF('termOverDialog').show()"
                update=":gameRoundForm:roundInfo :termOverForm:termOverDialog" />

            <p:ajax event="gameCanceled"
                onevent="PF('roundValidationDialog').hide()"
                oncomplete="PF('gameCanceledDialog').show()"
                update=":gameRoundForm:roundInfo :gameCanceledForm:gameCanceledDialog" />

            <p:ajax event="startGame"
                listener="#{grc.setup}"
                update="@all" />

            <p:ajax event="restartGame"
                listener="#{grc.setup}"
                onevent="if (grc.getCurrentRoundState() == 'VALIDATING') { PF('roundValidationDialog').show(); }"
                update="@all" />

            <p:ajax event="pauseGame"
                listener="#{grc.pauseGame}"
                update="@all" />

            <p:ajax event="setup"
                listener="#{grc.setup}" />

            <p:ajax event="setupandupdate"
                listener="#{grc.setup}"
                update="@all" />

            <p:ajax event="healthMessage"
                listener="#{cubeStatusController.displayHealthMessage}"
                update="msg" />
        </o:socket>
    </ui:define>
</ui:composition>
