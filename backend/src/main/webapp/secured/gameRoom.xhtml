<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3c.org/1999/xhtml"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui"
    xmlns:o="http://omnifaces.org/ui"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    template="/WEB-INF/templates/main.xhtml">

    <ui:define name="content">
        <p:growl id="msg" showDetail="true" skipDetailIfEqualsSummary="true" sticky="true" value="Multiple"/>

        <h:form>
            <p:panel styleClass="gameroomHeader">
                <h1>Gameroom</h1>
                <h:outputText style="font-size:15px!important"
                    value="---- ---- ---- ---- ---- ---- ----"
                    rendered="#{not empty gameRoundController.currentGame}" />
                <h:outputText style="font-size:20px!important"
                    value="#{gameRoundController.currentGame.name}   -   #{gameRoundController.currentGame.topic.name}   -   Max. points: #{gameRoundController.currentGame.maxPoints}"
                    rendered="#{not empty gameRoundController.currentGame}" />
            </p:panel>
        </h:form>

        <h:form id="stateInfo" prependId="false">
            <p:panel>
                <p:outputPanel>Game is in state: #{gameRoundController.currentRunState}</p:outputPanel>
                <p:outputPanel>Round is in state: #{gameRoundController.currentRoundState}</p:outputPanel>
                <p:outputPanel>Reason to wait is: #{gameRoundController.currentWaitReason}</p:outputPanel>
                <p:outputPanel>Reason for no game is: #{gameRoundController.currentNoGameReason}</p:outputPanel>
            </p:panel>
        </h:form>

        <h:form id="noGameForm" styleClass="gameroomNogame" rendered="#{empty gameRoundController.currentGame}">
            <h:panelGroup rendered="#{gameManagerController.getCurrentGameForUser(sessionInfoBean.currentUser).status == 'VALID_SETUP'}">
                <p:outputPanel>Your game is up and running, but paused for some reason.</p:outputPanel>
                <p:outputPanel>Possibly because there are not enough players in the gameroom (minimum one player per team) or a lost connection to the cube.</p:outputPanel>
                <p:outputPanel>Please wait...</p:outputPanel>
            </h:panelGroup>
            <h:panelGroup rendered="#{gameManagerController.getCurrentGameForUser(sessionInfoBean.currentUser).status == 'HALTED'}">
                <p:outputPanel>Your game was paused from outside.</p:outputPanel>
                <p:outputPanel>Please find somebody to restart it...</p:outputPanel>
            </h:panelGroup>
            <h:panelGroup rendered="#{gameManagerController.getCurrentGameForUser(sessionInfoBean.currentUser).status == 'PLAYED'}">
                <p:outputPanel>The other players are in the middle of a round.</p:outputPanel>
                <p:outputPanel>Please wait until it ends...</p:outputPanel>
            </h:panelGroup>
            <p:progressBar id="progressBarIndeterminate" mode="indeterminate"
                rendered="#{gameManagerController.getCurrentGameForUser(sessionInfoBean.currentUser).status != 'PLAYED'}" />
        </h:form>

        <h:form id="gameTableForm" rendered="#{not empty gameRoundController.currentGame}">
            <p:dataTable id="leaderbord" var="team" value="#{gameRoundController.teamsInGame}">
                <p:column headerText="Name">
                    <h:outputText value="#{team.name}" />
                </p:column>
                <p:column headerText="Points">
                    <h:outputText value="#{gameRoundController.calculatePointsOfTeam(team)}" />
                </p:column>
            </p:dataTable>
        </h:form>

        <h:form id="gameRoundForm" rendered="#{not empty gameRoundController.currentGame}">
            <p:panel id="roundInfo" header="Round #{gameRoundController.currentRound.nr}">
                <h:panelGroup rendered="#{empty gameRoundController.currentRound and (gameRoundController.nextRound.nr==1) and !gameRoundController.isInGuessingTeam()}">
                    <p:outputPanel>#{gameRoundController.nextRound.guessingUser.username} from #{gameRoundController.nextRound.guessingTeam.name} has to describe the term #{gameRoundController.nextRound.termToGuess.name}.</p:outputPanel>
                </h:panelGroup>
                <h:panelGroup rendered="#{empty gameRoundController.currentRound and (gameRoundController.nextRound.nr==1) and gameRoundController.isInGuessingTeam()}">
                    <p:outputPanel>Flip your cube to start the first round... may the best team win!</p:outputPanel>
                    <p:outputPanel>#{gameRoundController.nextRound.guessingUser.username} has to describe first.</p:outputPanel>
                </h:panelGroup>
                <h:panelGroup rendered="#{not empty gameRoundController.currentRound and !gameRoundController.inRound and !gameRoundController.isInGuessingTeam()}">
                    <p:outputPanel>#{gameRoundController.currentRound.guessingTeam.name} tried to guess the term #{gameRoundController.currentRound.termToGuess.name} during the last round.</p:outputPanel>
                    <p:outputPanel>Next #{gameRoundController.nextRound.guessingUser.username} from #{gameRoundController.nextRound.guessingTeam.name} has to describe the term #{gameRoundController.nextRound.termToGuess.name}</p:outputPanel>
                </h:panelGroup>
                <h:panelGroup rendered="#{not empty gameRoundController.currentRound and !gameRoundController.inRound and gameRoundController.isInGuessingTeam()}">
                    <p:outputPanel>#{gameRoundController.currentRound.guessingTeam.name} tried to guess the term #{gameRoundController.currentRound.termToGuess.name} during the last round.</p:outputPanel>
                    <p:outputPanel>Next #{gameRoundController.nextRound.guessingUser.username} has to describe.</p:outputPanel>
                    <p:outputPanel>Flip the cube and try your best!</p:outputPanel>
                </h:panelGroup>
                <h:panelGroup rendered="#{empty gameRoundController.currentRound and gameRoundController.nextRound.nr!=1 and !gameRoundController.isInGuessingTeam()}">
                    <p:outputPanel>You have entered the GameRoom a little bit late, but no worries! The next round is starting...</p:outputPanel>
                    <p:outputPanel>#{gameRoundController.nextRound.guessingUser.username} from #{gameRoundController.nextRound.guessingTeam.name} has to describe the term #{gameRoundController.nextRound.termToGuess.name}.</p:outputPanel>
                </h:panelGroup>
                <h:panelGroup rendered="#{empty gameRoundController.currentRound and gameRoundController.nextRound.nr!=1 and gameRoundController.isInGuessingTeam()}">
                    <p:outputPanel>You have entered the GameRoom a little bit late, but no worries! The next round is starting...</p:outputPanel>
                    <p:outputPanel>#{gameRoundController.nextRound.guessingUser.username} has to describe next.</p:outputPanel>
                </h:panelGroup>

                <p:outputPanel header="RoundInfo" rendered="#{gameRoundController.inRound}">
                    <h3>Time left to guess</h3>
                    <h1 class="p-text-center">
                         <h:outputText value="#{countDownController.getCountDown()}" />
                    </h1>
                    <p:panelGrid columns="2" layout="flex" styleClass="ui-panelgrid-blank" style="margin-top:15px"
                        columnClasses="p-col-5, p-col-7" contentStyleClass="ui-fluid">
                        <p:outputLabel value="User: " />
                        <p:outputLabel value="#{gameRoundController.currentRound.guessingUser.username}" />

                        <p:outputLabel value="Team: " />
                        <p:outputLabel value="#{gameRoundController.currentRound.guessingTeam.name}" />

                        <c:if test="${!gameRoundController.inGuessingTeam}">
                            <p:outputLabel value="Term: "/>
                            <p:outputLabel value="#{gameRoundController.currentRound.termToGuess.name}" />
                        </c:if>

                        <p:outputLabel value="Points: " />
                        <p:outputLabel value="#{gameRoundController.currentRound.points}" />

                        <p:outputLabel value="Activity: " />
                        <p:outputLabel value="#{gameRoundController.currentRound.activity}" />
                    </p:panelGrid> 
                </p:outputPanel>
            </p:panel>
        </h:form>

        <h:form id="roundValidationForm">
            <p:dialog id="roundValidationDialog" header="Round Validation"
                widgetVar="roundValidationDialog" dynamic="true" modal="true"
                resizable="false" closeOnEscape="false" showEffect="fade"
                hideEffect="fade" responsive="true" closable="false">

                <h:panelGroup rendered="#{not empty gameRoundController.currentRound and !gameRoundController.inGuessingTeam}" styleClass="dlgContent">
                    <p:outputPanel>Did #{gameRoundController.currentRound.guessingTeam.name} guess #{gameRoundController.currentRound.termToGuess.name} correctly?</p:outputPanel>
                    <p:outputPanel>First click comes first...</p:outputPanel>
                </h:panelGroup>
                <h:panelGroup rendered="#{gameRoundController.inGuessingTeam}" styleClass="dlgContent">
                    <p:outputPanel>You gave your best shot, your fate is now in the hands of your rivals.</p:outputPanel>
                    <p:outputPanel>Please wait until they have evaluated your effort...</p:outputPanel>
                </h:panelGroup>
                <h:panelGroup rendered="#{empty gameRoundController.currentRound and !gameRoundController.inGuessingTeam}" styleClass="dlgContent">
                    <p:outputPanel>You have the chance to validate the last round if you want to...</p:outputPanel>
                </h:panelGroup>

                <h:panelGrid columns="3" rendered="#{!gameRoundController.inGuessingTeam}">
                    <p:commandButton value="Correct"
                        action="#{gameRoundController.correctRound}" update=":gameRoundForm :gameTableForm"/>
                    <p:commandButton value="Incorrect"
                        action="#{gameRoundController.incorrectRound}" update=":gameRoundForm :gameTableForm"/>
                    <p:commandButton value="Cheated"
                        action="#{gameRoundController.cheatedRound}" update=":gameRoundForm :gameTableForm"/>
                </h:panelGrid>
            </p:dialog>
        </h:form>

        <h:form id="roundTimesUpForm">
              <p:dialog id="roundTimesUpDialog" header="Time is up"
                widgetVar="roundTimesUpDialog" dynamic="true" modal="true"
                resizable="false" closeOnEscape="false" showEffect="fade"
                hideEffect="fade" responsive="true" closable="false">
                
                <h:panelGroup rendered="#{not empty gameRoundController.currentRound and !gameRoundController.inGuessingTeam}" styleClass="dlgContent">
                    <p:outputPanel>Seems like #{gameRoundController.currentRound.guessingTeam.name} did not guess #{gameRoundController.currentRound.termToGuess.name} in time.</p:outputPanel>
                    <p:outputPanel>Please confirm this round to continue!</p:outputPanel>
                </h:panelGroup>
                <h:panelGroup rendered="#{not empty gameRoundController.currentRound and gameRoundController.inGuessingTeam}" styleClass="dlgContent">
                    <p:outputPanel>That took a bit long!</p:outputPanel>
                    <p:outputPanel>Please wait until your rivals confirm this round...</p:outputPanel>
                </h:panelGroup>
                
                <h:panelGrid columns="2" rendered="#{!gameRoundController.inGuessingTeam}">
                    <p:commandButton value="Confirm"
                        action="#{gameRoundController.endRoundViaCountDown}" update=":gameRoundForm :gameTableForm"
                        oncomplete="PF('roundTimesUpDialog').hide()"/>
                </h:panelGrid>
            </p:dialog>
        </h:form>

        <ui:include src="/WEB-INF/includes/gameRanking.xhtml">
            <ui:param name="dialogName" value="gameOver" />
            <ui:param name="dialogHeader" value="Game Over" />
            <ui:param name="gameOver" value="#{true}" />
        </ui:include>

        <ui:include src="/WEB-INF/includes/gameRanking.xhtml">
            <ui:param name="dialogName" value="termOver" />
            <ui:param name="dialogHeader" value="Term Over" />
            <ui:param name="termOver" value="#{true}" />
        </ui:include>

        <ui:include src="/WEB-INF/includes/gameRanking.xhtml">
            <ui:param name="dialogName" value="gameCanceled" />
            <ui:param name="dialogHeader" value="Game Canceled" />
            <ui:param name="gameCanceled" value="#{true}" />
        </ui:include>

        <o:socket channel="countDownChannel" scope="session"
            user="#{sessionInfoBean.currentUser.id}"
            onmessage="function(m){console.log(m);}">
            <p:ajax event="countDownUpdate" update=":gameRoundForm:roundInfo"/>
        </o:socket>

        <o:socket channel="newRoundChannel" scope="session"
            onmessage="function(m){console.log(m);}"
            user="#{sessionInfoBean.currentUser.id}">

            <p:ajax event="startRound"
                listener="#{gameRoundController.startRound}"
                update=":gameRoundForm:roundInfo stateInfo" />

            <p:ajax event="endRoundViaFlip"
                listener="#{gameRoundController.endRound}"
                oncomplete="PF('roundValidationDialog').show()"
                update=":gameRoundForm:roundInfo :roundValidationForm:roundValidationDialog stateInfo" />

            <p:ajax event="validatedRound"
                listener="#{gameRoundController.getNextRoundInfos}"
                oncomplete="PF('roundValidationDialog').hide(); PF('roundTimesUpDialog').hide()"
                update="@all" />

            <p:ajax event="endRoundViaCountDown"
                listener="#{gameRoundController.setInRound(false)}"
                oncomplete="PF('roundTimesUpDialog').show()"
                update=":roundTimesUpForm:roundTimesUpDialog stateInfo" />

            <p:ajax event="gameOver"
                onevent="PF('roundValidationDialog').hide())"
                oncomplete="PF('gameOverDialog').show()"
                update=":gameRoundForm:roundInfo :gameOverForm:gameOverDialog stateInfo" />

            <p:ajax event="termsOver"
                onevent="PF('roundValidationDialog').hide()) PF('roundTimesUpDialog').hide()"
                oncomplete="PF('termOverDialog').show()"
                update=":gameRoundForm:roundInfo :termOverForm:termOverDialog stateInfo" />

            <p:ajax event="gameCanceled"
                onevent="PF('roundValidationDialog').hide())"
                oncomplete="PF('gameCanceledDialog').show()"
                update=":gameRoundForm:roundInfo :gameCanceledForm:gameCanceledDialog stateInfo" />

            <p:ajax event="startGame"
                listener="#{gameRoundController.setup}"
                update="@all" />

            <p:ajax event="restartGame"
                listener="#{gameRoundController.setup}"
                update="@all" />

            <p:ajax event="pauseGame"
                listener="#{gameRoundController.destroy}"
                update="@all" />

            <p:ajax event="setup"
                listener="#{gameRoundController.setup}" />

            <p:ajax event="setupandupdate"
                listener="#{gameRoundController.setup}"
                update="@all" />

            <p:ajax event="healthMessage"
                listener="#{cubeStatusController.displayHealthMessage}"
                update="msg stateInfo" />
        </o:socket>
    </ui:define>
</ui:composition>
